swagger: "2.0"
info:
  title: osoc-dialog
  version: 1.0.0
tags:
  - name: user
    description: User endpoints
  - name: auth
    description: Auth routes
  - name: probes
    description: Probes endpoints
  - name: post
    description: Post endpoints
host: "localhost:8081"
schemes:
  - https
securityDefinitions:
  bearerAuth:
    type: apiKey
    in: header
    name: Authorization
    description: JWT Authorization header (e.g. Bearer my-secure-token)

paths:
  /api/v1/refresh:
    post:
      tags:
        - auth
      summary: get new token pair by your refresh token
      operationId: refresh
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: token
          description: "your refresh token"
          schema:
            type: object
            properties:
              token:
                type: string
          required: true
      responses:
        200:
          description: success response
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/tokens"
        500:
          description: Internal error
  /api/v1/registration:
    post:
      tags:
        - auth
      summary: simple login by userid
      operationId: registration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: "#/definitions/registration"
          required: true
      responses:
        200:
          description: success response
          schema:
            $ref: "#/definitions/tokens"
        500:
          description: Internal error
  /api/v1/login:
    post:
      tags:
        - auth
      summary: simple login by userid
      operationId: login
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              id:
                type: integer
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: success response
          schema:
            $ref: "#/definitions/tokens"
        500:
          description: Internal error
  /api/v1/user/search:
    get:
      tags:
        - user
      summary: search user by params
      operationId: search_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: "first_name"
          type: string
          required: false
        - in: query
          name: "last_name"
          type: string
          required: false
      responses:
        200:
          description: success response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/user"
        404:
          description: Not found
        500:
          description: Internal error
  /api/v1/user:
    get:
      tags:
        - user
      summary: get user by bearer token
      operationId: personal_user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
      responses:
        200:
          description: success response
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/user"
        404:
          description: Not found
        401:
          description: Not authorize
        500:
          description: Internal error
  /api/v1/user/{id}:
    get:
      tags:
        - user
      summary: get user by id
      operationId: user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: "user id"
      responses:
        200:
          description: success response
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/user"
        404:
          description: Not found
        500:
          description: Internal error
  /api/v1/dialog/{user_id}/list:
    get:
      tags:
        - dialog
      summary: create post
      operationId: dialog_list
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          required: true
          name: user_id
          type: string
      responses:
        200:
          description: success response
        500:
          description: Internal error
  /api/v1/dialog/{user_id}/send:
    post:
      tags:
        - dialog
      summary: send dialog message
      operationId: dialog_send
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          required: true
          name: user_id
          type: string
        - in: body
          name: text
          schema:
            type: object
            required:
              - text
            properties:
              text:
                $ref: "#/definitions/DialogMessageText"
          required: true
      responses:
        200:
          description: success response
        500:
          description: Internal error
  /api/v1/post/create:
    post:
      tags:
        - post
      summary: create post
      operationId: post_create
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - text
            properties:
              text:
                $ref: "#/definitions/PostText"
          required: true
      responses:
        200:
          description: success response
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/PostId"
        500:
          description: Internal error
  /api/v1/post/feed:
    get:
      tags:
        - post
      summary: post list
      operationId: post_feed
      produces:
        - application/json
      parameters:
        - in: query
          name: "offset"
          type: string
          required: false
        - in: query
          name: "limit"
          type: string
          required: false
      responses:
        200:
          description: success response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Post"
        404:
          description: Not found
        500:
          description: Internal error
  /api/v1/post/update:
    put:
      tags:
        - post
      summary: update post
      operationId: post_update
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: id
          schema:
            type: object
            required:
              - text
              - id
            properties:
              id:
                $ref: "#/definitions/PostId"
              text:
                $ref: "#/definitions/PostText"
          required: true
      responses:
        200:
          description: success response
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/PostId"
        500:
          description: Internal error
  /api/v1/post/delete/{id}:
    put:
      tags:
        - post
      summary: delete post
      operationId: post_delete
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: "post id"
      responses:
        200:
          description: success response
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/PostId"
        500:
          description: Internal error
  /api/v1/post/get/{id}:
    get:
      tags:
        - post
      summary: get post
      operationId: post_get
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: "post id"
      responses:
        200:
          description: success response
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Post"
        500:
          description: Internal error
  /ready:
    get:
      tags:
        - probes
      description: Indicates whether the service is ready to accept requests
      operationId: isServiceReady
      responses:
        200:
          description: Service ready

  /live:
    get:
      tags:
        - probes
      description: Indicates whether the service is operating and should be rebooted if it is not
      operationId: isServiceAlive
      responses:
        200:
          description: Service alive

  /doc:
    get:
      tags:
        - probes
      description: Provides API specification
      operationId: getAPISpecification
      responses:
        200:
          description: API specification in Swagger format

definitions:
  DialogMessage:
    type: object
    required:
      - from
      - to
      - text
    properties:
      from:
        $ref: "#/definitions/UserId"
      to:
        $ref: "#/definitions/UserId"
      text:
        $ref: "#/definitions/DialogMessageText"
  DialogMessageText:
    type: string
    description: "Текст сообщения"
    example: "Привет, как дела?"
  registration:
    type: object
    properties:
      last_name:
        type: string
      sex:
        type: string
      interests:
        type: string
      password:
        type: string
      age:
        type: integer
  tokens:
    type: object
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
  Post:
    type: object
    description: "user post"
    properties:
      id:
        $ref: "#/definitions/PostId"
      text:
        $ref: "#/definitions/PostText"
      author_user_id:
        $ref: "#/definitions/UserId"
  UserId:
    type: string
    description: "user id"
    example: "1d535fd6-7521-4cb1-aa6d-031be7123c4d"
  PostId:
    type: string
    description: "post id"
    example: "1d535fd6-7521-4cb1-aa6d-031be7123c4d"
  PostText:
    type: string
    description: "post text"
    example: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
  user:
    type: object
    properties:
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      age:
        type: integer
      sex:
        type: string
      interests:
        type: string
      created_at:
        type: string