{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "osoc-dialog",
    "version": "1.0.0"
  },
  "host": "localhost:8081",
  "paths": {
    "/api/v1/dialog/{user_id}/list": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "dialog"
        ],
        "summary": "create post",
        "operationId": "dialog_list",
        "parameters": [
          {
            "type": "string",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success response"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/dialog/{user_id}/send": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "dialog"
        ],
        "summary": "create post",
        "operationId": "dialog_send",
        "parameters": [
          {
            "type": "string",
            "name": "user_id",
            "in": "path",
            "required": true
          },
          {
            "name": "text",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "text"
              ],
              "properties": {
                "text": {
                  "$ref": "#/definitions/DialogMessageText"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success response"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "simple login by userid",
        "operationId": "login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "$ref": "#/definitions/tokens"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/post/create": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "post"
        ],
        "summary": "create post",
        "operationId": "post_create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "text"
              ],
              "properties": {
                "text": {
                  "$ref": "#/definitions/PostText"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PostId"
                }
              }
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/post/delete/{id}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "post"
        ],
        "summary": "delete post",
        "operationId": "post_delete",
        "parameters": [
          {
            "type": "integer",
            "description": "post id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PostId"
                }
              }
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/post/feed": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "post"
        ],
        "summary": "post list",
        "operationId": "post_feed",
        "parameters": [
          {
            "type": "string",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/post/get/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "post"
        ],
        "summary": "get post",
        "operationId": "post_get",
        "parameters": [
          {
            "type": "integer",
            "description": "post id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Post"
                }
              }
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/post/update": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "post"
        ],
        "summary": "update post",
        "operationId": "post_update",
        "parameters": [
          {
            "name": "id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "text",
                "id"
              ],
              "properties": {
                "id": {
                  "$ref": "#/definitions/PostId"
                },
                "text": {
                  "$ref": "#/definitions/PostText"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/PostId"
                }
              }
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/refresh": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "get new token pair by your refresh token",
        "operationId": "refresh",
        "parameters": [
          {
            "description": "your refresh token",
            "name": "token",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/tokens"
                }
              }
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/registration": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "simple login by userid",
        "operationId": "registration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "$ref": "#/definitions/tokens"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/user": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "get user by bearer token",
        "operationId": "personal_user",
        "parameters": [
          {
            "type": "string",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          },
          "401": {
            "description": "Not authorize"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/user/search": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "search user by params",
        "operationId": "search_user",
        "parameters": [
          {
            "type": "string",
            "name": "first_name",
            "in": "query"
          },
          {
            "type": "string",
            "name": "last_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/user"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/api/v1/user/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "get user by id",
        "operationId": "user",
        "parameters": [
          {
            "type": "integer",
            "description": "user id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/user"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/doc": {
      "get": {
        "description": "Provides API specification",
        "tags": [
          "probes"
        ],
        "operationId": "getAPISpecification",
        "responses": {
          "200": {
            "description": "API specification in Swagger format"
          }
        }
      }
    },
    "/live": {
      "get": {
        "description": "Indicates whether the service is operating and should be rebooted if it is not",
        "tags": [
          "probes"
        ],
        "operationId": "isServiceAlive",
        "responses": {
          "200": {
            "description": "Service alive"
          }
        }
      }
    },
    "/ready": {
      "get": {
        "description": "Indicates whether the service is ready to accept requests",
        "tags": [
          "probes"
        ],
        "operationId": "isServiceReady",
        "responses": {
          "200": {
            "description": "Service ready"
          }
        }
      }
    }
  },
  "definitions": {
    "DialogMessage": {
      "type": "object",
      "required": [
        "from",
        "to",
        "text"
      ],
      "properties": {
        "from": {
          "$ref": "#/definitions/UserId"
        },
        "text": {
          "$ref": "#/definitions/DialogMessageText"
        },
        "to": {
          "$ref": "#/definitions/UserId"
        }
      }
    },
    "DialogMessageText": {
      "description": "Текст сообщения",
      "type": "string",
      "example": "Привет, как дела?"
    },
    "Post": {
      "description": "user post",
      "type": "object",
      "properties": {
        "author_user_id": {
          "$ref": "#/definitions/UserId"
        },
        "id": {
          "$ref": "#/definitions/PostId"
        },
        "text": {
          "$ref": "#/definitions/PostText"
        }
      }
    },
    "PostId": {
      "description": "post id",
      "type": "string",
      "example": "1d535fd6-7521-4cb1-aa6d-031be7123c4d"
    },
    "PostText": {
      "description": "post text",
      "type": "string",
      "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
    },
    "UserId": {
      "description": "user id",
      "type": "string",
      "example": "1d535fd6-7521-4cb1-aa6d-031be7123c4d"
    },
    "registration": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer"
        },
        "interests": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "sex": {
          "type": "string"
        }
      }
    },
    "tokens": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "interests": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "sex": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "description": "JWT Authorization header (e.g. Bearer my-secure-token)",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "User endpoints",
      "name": "user"
    },
    {
      "description": "Auth routes",
      "name": "auth"
    },
    {
      "description": "Probes endpoints",
      "name": "probes"
    },
    {
      "description": "Post endpoints",
      "name": "post"
    }
  ]
}